{"version":3,"sources":["DataTable.tsx","App.tsx","index.tsx"],"names":["DataTable","_ref","data","_jsxs","style","width","marginTop","children","_jsx","Object","entries","map","_ref2","playerId","details","player_name","position","team","goals","App","setData","useState","loading","setLoading","error","setError","className","onClick","async","baseUrl","response","fetch","concat","jsonData","json","err","disabled","left","transform","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"8LAgCeA,MA3B6BC,IAAe,IAAb,KAACC,GAAKD,EAClD,OACEE,eAAA,SAAOC,MAAO,CAAEC,MAAO,OAAQC,UAAW,QAASC,SAAA,CACjDC,cAAA,SAAAD,SACEJ,eAAA,MAAAI,SAAA,CACEC,cAAA,MAAAD,SAAI,OACJC,cAAA,MAAAD,SAAI,SACJC,cAAA,MAAAD,SAAI,aACJC,cAAA,MAAAD,SAAI,SACJC,cAAA,MAAAD,SAAI,eAGRC,cAAA,SAAAD,SACCE,OAAOC,QAAQR,GAAMS,KAAIC,IAAA,IAAEC,EAAUC,GAAQF,EAAA,OAC1CT,eAAA,MAAAI,SAAA,CACEC,cAAA,MAAAD,SAAKM,IACLL,cAAA,MAAAD,SAAKO,EAAQC,cACbP,cAAA,MAAAD,SAAKO,EAAQE,WACbR,cAAA,MAAAD,SAAKO,EAAQG,OACbT,cAAA,MAAAD,SAAKO,EAAQI,UALNL,EAMJ,QAGH,ECiBGM,MAvCHA,KACV,MAAOjB,EAAMkB,GAAWC,mBAAyC,CAAC,IAC3DC,EAASC,GAAcF,oBAAS,IAChCG,EAAOC,GAAYJ,mBAAS,IAkBnC,OACElB,eAAA,OAAKuB,UAAU,MAAKnB,SAAA,CAClBC,cAAA,UAAQmB,QAlBMC,UAChB,IACEL,GAAW,GACX,MAAMM,EAAU,4DACVC,QAAiBC,MAAM,GAADC,OAAIH,EAAO,4BACjCI,QAAiBH,EAASI,OAChCd,EAAQa,GACRR,EAAS,GACX,CAAE,MAAOU,GACPV,EAAS,yBACTL,EAAQ,CAAC,EACX,CAAC,QACCG,GAAW,EACb,GAMMa,SAAUd,EACVlB,MAAO,CACLE,UAAW,OACXU,SAAU,WACVqB,KAAM,MACNC,UAAW,oBACT/B,SAELe,EAAU,aAAe,eAE5Bd,cAACR,EAAS,CAACE,KAAMA,MACb,ECpCVqC,IAASC,OACPhC,cAACiC,IAAMC,WAAU,CAAAnC,SACfC,cAACW,EAAG,MAENwB,SAASC,eAAe,Q","file":"static/js/main.be448111.chunk.js","sourcesContent":["import React from 'react';\nimport { PlayerDetails, DataTableProps } from './types';\n\n\n\nconst DataTable: React.FC<DataTableProps> = ( {data} ) => {\n  return (\n    <table style={{ width: '100%', marginTop: '60px' }}>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Position</th>\n          <th>Team</th>\n          <th>Goals</th>\n        </tr>\n      </thead>\n      <tbody>\n      {Object.entries(data).map(([playerId, details]) => (\n          <tr key={playerId}>\n            <td>{playerId}</td>\n            <td>{details.player_name}</td>\n            <td>{details.position}</td>\n            <td>{details.team}</td>\n            <td>{details.goals}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default DataTable;\n","import React, { useState } from 'react';\nimport './App.css';\nimport DataTable from './DataTable';\nimport { PlayerDetails } from './types';\n\n\nconst App = () => {\n  const [data, setData] = useState<{[key: string]: PlayerDetails}>({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const baseUrl = \"https://collector-nhl-fantasy-481b97d2ae29.herokuapp.com/\";\n      const response = await fetch(`${baseUrl}/fetch-nhl-goal-leaders`);\n      const jsonData = await response.json();\n      setData(jsonData);\n      setError('');\n    } catch (err) {\n      setError('Failed to fetch data.');\n      setData({});\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={fetchData} \n          disabled={loading}\n          style={{ \n            marginTop: '20px', \n            position: 'absolute', \n            left: '50%', \n            transform: 'translateX(-50%)' \n            }}\n      >\n        {loading ? 'Loading...' : 'Fetch Data'}\n      </button>\n      <DataTable data={data}/>\n    </div>\n  );\n}\n\nexport default App;\n","// Assuming your index.html has a div with id='root' where the React app will be mounted\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}